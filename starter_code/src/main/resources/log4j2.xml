<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
    <Appenders>
        <Console name="console" target="SYSTEM_OUT">
            <PatternLayout
                pattern="%style{%d{ISO8601}} %highlight{%-5level }[%style{%t}{bright,blue}] %style{%C{10}}{bright,yellow}: %msg%n%throwable" />
        </Console>
        <SplunkHttp
            name="splunkhttp"
            url="http://localhost:8088"
            token="4fd35d58-4503-42d0-8c9b-81f87fb80f98"
            host="localhost"
            index="ecommerce_api_dev"
            type="raw"
            source="http-even-logs"
            sourcetype="log4j"
            messageFormat="text"
            disableCertificateValidation="true">
            <PatternLayout pattern="%m" />
        </SplunkHttp>

    </Appenders>

    <Loggers>
        <!-- LOG everything at INFO level -->
        <Root level="info">
            <AppenderRef ref="console" />
            <AppenderRef ref="splunkhttp" />
        </Root>
    </Loggers>
</Configuration>

<!-- <?xml version="1.0" encoding="UTF-8"?>
   // https://howtodoinjava.com/log4j2/log4j2-xml-configuration-example/
<Configuration status="WARN">
   // Logging Properties
    <Properties>
        <Property name="LOG_PATTERN">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>
       // File Location 
        <Property name="APP_LOG_ROOT">E:/temp/logs</Property>
    </Properties>

    <Appenders>
      // Console Appender 
        <Console name="Console" target="SYSTEM_OUT" follow="true">
            <PatternLayout pattern="${LOG_PATTERN}" />
        </Console>
        <SplunkHttp
            name="splunkhttp"
            url="http://localhost:8088"
            token="4fd35d58-4503-42d0-8c9b-81f87fb80f98"
            host="localhost"
            index="ecommerce_api_dev"
            type="raw"
            source="http-even-logs"
            sourcetype="log4j"
            messageFormat="text"
            disableCertificateValidation="true">
            <PatternLayout pattern="%m" />
        </SplunkHttp>
       //File Appenders on need basis
        <RollingFile name="fileLogger"
            fileName="${basePath}/app.log"
            filePattern="${basePath}/app-%d{yyyy-MM-dd}.log">
            <PatternLayout>
                <pattern>[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <SizeBasedTriggeringPolicy size="10MB" />
            </Policies>
           // Max 10 files will be created everyday
            <DefaultRolloverStrategy max="10">
                <Delete basePath="${basePathr}" maxDepth="10">
                   // Delete all files older than 30 days
                    <IfLastModified age="30d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
    </Appenders>
    <Loggers>
        <Logger name="com.example.demo" additivity="false">
            <AppenderRef ref="fileLogger" />
            <AppenderRef ref="Console" />
        </Logger>

        <Root level="info">
            <AppenderRef ref="Console" />
            <AppenderRef ref="splunkhttp" />
        </Root>
    </Loggers>

</Configuration>

-->